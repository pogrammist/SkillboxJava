public class Starter {
    public static void main(String[] args) {

//        ОКАТО от 01 до 99
//        ГОД   от 00 до 99
//        ЧИСЛА от 0100 до 9999
//        ИТОГО 99 * 100 = 9900

        String series[] = new String[9900];

        for (int i = 0; i < series.length; i++) {
            series[i] = String.format("%04d", i + 100);
            System.out.println(series[i]);
        }
    }
}

//  Вопрос 1: Как добавлять ведущий ноль для int?

//  Вопрос 2: После первой проверки было получено замечание:
//  "Серия паспортов в РФ формируется более сложно, нежели просто перечисление."
//  Попытался организовать тремя вложенными циклами первый ОКАТО от 01 до 100,
//  второй ГОД от 00 до 100, полученны значения в третьем цикле от 0 до 10000
//  помещал в массив. При выводе получал значения от 0100 до 9999 с повтором до 10000 раз
//  как позже выяснилось. Решение оказалось неверным. Решил иначе. Но остался вопрос:
//  Как заполнить массив более сложными интервалами чисел не образующимим одну последовательность
//  используя циклы в том числе вложенными и при этом не получать дублирование значений
//  при заполнении массива как вышло в моем случае?

//    for (int okato = 1; okato < 100; okato++) {
//        for (int year = 0; year < 100; year++) {
//            for (int i = 0; i < series.length; i++) {
//                series[i] = String.format("%02d%02d", okato, year);
//            }
//        }
//    }


